{"version":3,"sources":["components/Header.js","components/CompHeader.js","components/Editor.js","components/Preview.js","components/Main.js","App.js","index.js"],"names":["Header","className","CompHeader","title","style","borderRadius","boxShadow","Editor","useContext","PropContext","text","setText","console","log","class","id","rows","spellcheck","onChange","e","target","value","height","marked","require","setOptions","breaks","markupHtml","html","__html","Preview","dangerouslySetInnerHTML","overflow","padding","Main","React","createContext","App","useState","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NASeA,EAPA,kBACb,mCACE,qBAAIC,UAAU,mBAAd,qBACU,sBAAMA,UAAU,uBAAhB,sCCaCC,MAhBf,YAAgC,IAAVC,EAAS,EAATA,MACpB,OACE,oBACEF,UAAU,gCACVG,MAAO,CACLC,aAAc,SAEdC,UACE,gFANN,SASGH,KCgBQI,MA1Bf,WACE,MAA0BC,qBAAWC,GAA7BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAEd,OADAC,QAAQC,IAAIH,EAAMC,GAEhB,qCACE,cAAC,EAAD,CAAYR,MAAM,UAClB,+BACE,mCACE,qBAAKW,MAAM,aAAX,SACE,0BACEA,MAAM,eACNC,GAAG,SACHC,KAAK,KACLC,WAAW,QACXC,SAAU,SAACC,GAAD,OAAOR,EAAQQ,EAAEC,OAAOC,QAClCjB,MAAO,CAAEkB,OAAQ,QANnB,SAQGZ,cChBTa,EAASC,EAAQ,IACvBD,EAAOE,WAAW,CAChBC,QAAQ,IAEV,IAAMC,EAAa,SAACjB,GAClB,IAAMkB,EAAOL,EAAO,GAAD,OAAIb,IACvB,MAAO,CAAEmB,OAAO,GAAD,OAAKD,KAyBPE,MAtBf,WACE,IAAQpB,EAASF,qBAAWC,GAApBC,KACR,OACE,qCACE,cAAC,EAAD,CAAYP,MAAM,WAClB,qBACEY,GAAG,UACHd,UAAU,OACV8B,wBAAyBJ,EAAWjB,GACpCN,MAAO,CACL4B,SAAU,SAEVC,QAAS,OACT5B,aAAc,UACdC,UACE,gGCTG4B,MAff,WACE,OACE,mCACE,sBAAKjC,UAAU,MAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,uBAAf,SACE,cAAC,EAAD,YCNGQ,EAAc0B,IAAMC,gBA6DlBC,EAdH,WACV,MAAwBC,mBA9CH,0pCA8CrB,mBAAO5B,EAAP,KAAaC,EAAb,KACA,OACE,cAACF,EAAY8B,SAAb,CAAsBlB,MAAO,CAAEX,OAAMC,WAArC,SACE,qBAAKV,UAAU,mBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,YCvDVuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.1ab2963f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <>\n    <h1 className='text-center my-5'>\n      Awesome <span className='text-primary fw-bold'>Markdown Previewer</span>\n    </h1>\n  </>\n);\nexport default Header;\n","import React from 'react';\n\nfunction CompHeader({ title }) {\n  return (\n    <h2\n      className='p-2 text-white fw-bolder mb-5'\n      style={{\n        borderRadius: '0.8rem',\n\n        boxShadow:\n          ' 2px 2px 8px rgba(55, 94, 148, 0.3),  -3px -2px 5px rgba(255, 255, 255, 0.8)',\n      }}\n    >\n      {title}\n    </h2>\n  );\n}\n\nexport default CompHeader;\n","import React, { useContext } from 'react';\nimport { PropContext } from '../App';\nimport CompHeader from './CompHeader';\nfunction Editor() {\n  const { text, setText } = useContext(PropContext);\n  console.log(text, setText);\n  return (\n    <>\n      <CompHeader title='input' />\n      <form>\n        <fieldset>\n          <div class='form-group'>\n            <textarea\n              class='form-control'\n              id='editor'\n              rows='15'\n              spellcheck='false'\n              onChange={(e) => setText(e.target.value)}\n              style={{ height: 'auto' }}\n            >\n              {text}\n            </textarea>\n          </div>\n        </fieldset>\n      </form>\n    </>\n  );\n}\n\nexport default Editor;\n","import React, { useContext } from 'react';\nimport { PropContext } from '../App';\nimport CompHeader from './CompHeader';\n\nconst marked = require('marked');\nmarked.setOptions({\n  breaks: true,\n});\nconst markupHtml = (text) => {\n  const html = marked(`${text}`);\n  return { __html: `${html}` };\n};\n\nfunction Preview() {\n  const { text } = useContext(PropContext);\n  return (\n    <>\n      <CompHeader title='output' />\n      <div\n        id='preview'\n        className='pb-5'\n        dangerouslySetInnerHTML={markupHtml(text)}\n        style={{\n          overflow: 'hidden',\n          // border: 'solid 1px #999',\n          padding: '1rem',\n          borderRadius: '0.25rem',\n          boxShadow:\n            'inset 2px 2px 8px rgba(55, 94, 148, 0.3), inset -3px -2px 5px rgba(255, 255, 255, 0.8)',\n        }}\n      ></div>\n    </>\n  );\n}\n\nexport default Preview;\n","import React, { useContext } from 'react';\nimport Editor from './Editor';\nimport Preview from './Preview';\n\nfunction Main() {\n  return (\n    <>\n      <div className='row'>\n        <div className='col-md-6 p-2 px-md-5'>\n          <Editor />\n        </div>\n        <div className='col-md-6 p-2 px-md-5'>\n          <Preview />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Main;\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nexport const PropContext = React.createContext();\n\nconst htmlTextToPreview = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`;\n\nconst App = () => {\n  const [text, setText] = useState(htmlTextToPreview);\n  return (\n    <PropContext.Provider value={{ text, setText }}>\n      <div className='App bg-secondary'>\n        <div className='container-fluid'>\n          <Header />\n          <Main />\n        </div>\n      </div>\n    </PropContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}